name: ArXiv AutoSumm Daily

on:
  schedule:
    # Run daily at 22:00 UTC (adjust as needed)
    - cron: '0 22 * * *'
  workflow_dispatch:
    inputs:
      category:
        description: 'ArXiv category to process (optional, overrides config, single category only)'
        required: false
        default: ''

jobs:
  run-arxiv-autosumm:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml', '**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache ArXiv Paper Database
      uses: actions/cache@v4
      with:
        path: ~/.cache/arxiv-autosumm/
        key: arxiv-cache-v3
        restore-keys: arxiv-cache-v2-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          texlive-latex-base \
          texlive-latex-extra \
          texlive-xetex \
          pandoc \
          calibre \
          curl

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Export repository variables and secrets
      run: |
        # Run the universal environment export script
        .github/scripts/export-env.sh

    - name: Create config from environment (if needed)
      if: env.USE_REPO_CONFIG != 'true' || hashFiles('config.yaml') == ''
      run: |
        # Run the config generation script
        .github/scripts/create-config.sh

    - name: Ensure cache directory exists
      run: |
        mkdir -p ~/.cache/arxiv-autosumm/

    - name: Extract output directory from config
      id: extract_output
      run: |
        if [ -f "config.yaml" ]; then
          # Try to extract output_dir from render section
          OUTPUT_DIR=$(grep -A5 "render:" config.yaml | grep "output_dir" | sed 's/.*output_dir: *//' | tr -d '"' | tr -d "'" || echo "./output")
          # Fallback to ./output if extraction fails
          if [ -z "$OUTPUT_DIR" ]; then
            OUTPUT_DIR="./output"
          fi
        else
          OUTPUT_DIR="./output"
        fi
        echo "OUTPUT_DIR=$OUTPUT_DIR" >> $GITHUB_ENV
        echo "Extracted output directory: $OUTPUT_DIR"

    - name: Validate configuration
      run: |
        python -m autosumm.cli run --config config.yaml --test

    - name: Run ArXiv AutoSumm
      run: |
        if [ "${{ github.event.inputs.category }}" != "" ]; then
          echo "Running with specified category: ${{ github.event.inputs.category }}"
          python -m autosumm.cli run --config config.yaml --verbose --specify-category "${{ github.event.inputs.category }}"
        else
          echo "Running with default categories from config"
          python -m autosumm.cli run --config config.yaml --verbose
        fi

    - name: Upload outputs as artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: arxiv-summaries-${{ github.run_number }}
        path: |
          ${{ env.OUTPUT_DIR }}/**/*
          logs/
        retention-days: 30
        if-no-files-found: warn

    - name: Get current date for release
      if: success() && github.event_name == 'schedule'
      id: date
      run: |
        echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
        echo "formatted_date=$(date +'%B %d, %Y')" >> $GITHUB_OUTPUT

    - name: Create Daily Release (scheduled runs only)
      if: success() && github.event_name == 'schedule'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: daily-${{ github.run_number }}
        name: ArXiv Summaries - ${{ steps.date.outputs.date }} - Run ${{ github.run_number }}
        body: |
          Automated ArXiv paper summaries generated on ${{ steps.date.outputs.formatted_date }}

          ## Files
          This release contains the generated summary files for today's ArXiv papers.
        files: |
          ${{ env.OUTPUT_DIR }}/**/*
        draft: false
        prerelease: false
        generate_release_notes: false
        
    - name: Clean up old releases
      if: github.event_name == 'schedule'
      run: |
        # Keep only the last 7 daily releases to avoid clutter
        gh release list --limit 50 | grep "daily-" | tail -n +8 | cut -f1 | xargs -r gh release delete -y
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}